<div class="container p-4">
    <div class="d-flex" id="wrapper">
    <!-- Sidebar -->
    <div id="sidebar-wrapper">
      <div class="sidebar-heading"><h4>Jugadores</h4></div>
      <ul class="list-group" id="players"></ul>
    </div>
    <!-- /#sidebar-wrapper -->
    <!-- Page Content -->
    <div>
      <nav class="navbar navbar-expand-lg navbar-light">
        <button class="btn btn-info" id="menu-toggle" style="padding: 5px;"><i class="fas fa-arrows-alt-h fa-2x"></i></button>
        <div style="margin-left: 1em; width: 100%; border-bottom: 1px solid #C0C1C0; color: white;">
          <h6 id="p_name" style="float: right;"></h6>
        </div>
      </nav>
      <div class="container-fluid">
        <div id="board" style="text-align:center;">
          <div id="c_table" style="display: inline-flex;"></div>
          <div id="c_player" style="display: inline-flex;"></div>
        </div>
        <div class="row" style="margin: 1em 0 2em 0;">
          <div class="col-md-6">
            <button class="btn btn-info btn-block" id="init"><i class="fab fa-buffer"></i> Iniciar Partida</button>
            <button class="btn btn-info btn-block" id="end_turn"><i class="fas fa-arrow-right"></i> Terminar Turno</button>
            <button class="btn btn-info btn-block" id="take_all"><i class="fas fa-exchange-alt"></i> Tomar Todas</button>
            <button class="btn btn-danger btn-block" id="tocar"><i class="far fa-hand-rock"></i> Tocar</button>
            <hr>                              
            <button class="btn btn-secondary btn-block" data-toggle="modal" data-target="#modal"><i class="fas fa-user"></i> Cambiar Nombre</button>
            <a class="btn btn-dark btn-block" href="/" style="margin-bottom: 1em;"><i class="fas fa-sign-out-alt"></i> Salir</a>
          </div>
          <div class="col-md-6">
            <ul id="player_data" class="list-group">
              <li class="list-group-item"><b>Comodines:</b> <div><img class="img-fluid" alt="Responsive image" width="80" height="40" src="/pics/cards/red_joker.svg"><img class="img-fluid" id="_comodin" style="margin-left: 1em;" alt="Responsive image" width="80" height="40" src=""></div></li>
              <li class="list-group-item"><b>Fichas:</b> <p id="p_fichas"></p></li>
              <li class="list-group-item"><b>Puntos:</b> <p id="p_puntos"></p></li>
              <li class="list-group-item"><b>Viudas Restantes:</b> <p id="_viudas"></p></li>
            </ul>
          </div>                      
        </div>
      </div>
    </div>
    <!-- #content -->
  </div>
</div>
{{! Cambiar Nombre }}
<div class="modal" id="modal" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Nombre de Jugador</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <input type="text" id="t_nombre" style="text-transform:uppercase" class="form-control">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="nombre">Guardar</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>
{{! Comprar Viuda }}
<div class="modal" id="modal2" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Sin Fichas!</h5>
      </div>
      <div class="modal-body" style="text-align: center;">
        <h4>Te has quedado sin fichas</h4>
        <p>Para seguir en el juego necesitas comprar un ficha Viuda por:</p>
        <h2>{{precioViuda}}</h2>
        <p>puntos</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="comprar_viuda">Comprar</button>
        <button type="button" class="btn btn-dark" id="_sin_fichas">Salir</button>
      </div>
    </div>
  </div>
</div>
{{! End Game }}
<div class="modal" id="modal3" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Fin de la Partida</h5>
      </div>
      <div class="modal-body">
        <div class="container" id="_end_game_list"></div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="_next_game">Siguente Partida</button>
        <a class="btn btn-dark" href="/">Salir</a>
      </div>
    </div>
  </div>
</div>
{{! Split Deck }}
<div class="modal" id="modal4" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Encuenta el Comod√≠n!</h5>
      </div>
      <div class="modal-body">
        <div class="container">
          <img src="/pics/cards/card_back.svg" style="width: 100%; height: 100%;" id="_baraja_partida_img">
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="_partir_baraja">Partir Baraja</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/nosleep/0.11.0/NoSleep.min.js">
    //NoSleep
    let noSleep = new noSleep();
    function enableNoSleep() 
    {
      noSleep.enable();
      document.removeEventListener('touchstart', enableNoSleep, false);
    }
    document.addEventListener('touchstart', enableNoSleep, false);
</script>
<script>
    //Reset Function
    function reset()
    {
      $('#c_table').empty();
      $('#c_player').empty();
      $('#players').children().css('background', '#F0EFEF');
      $('#_baraja_partida_img').attr('src', '/pics/cards/card_back.svg');
      for(let i=0; i < 5; i++)
      {
          $('#c_table').append('<div class="col-sm" style="padding-right: 0.2em; padding-top: 0;"><img src="/pics/cards/card_back.svg" style="width: 100%; height: 100%;"></div>');
          $('#c_player').append('<div class="col-sm" style="padding-right: 0.2em; padding-bottom: 0;"><img src="/pics/cards/card_back.svg" style="width: 100%; height: 100%;"></div>');
      }
      $('#end_turn').hide();
      $('#take_all').hide();
      $('#tocar').hide(); 
      $('#_comodin').hide();
      //Var
      shows_who_knocks = true;    
    }

    let pick = {
      p_card: '',
      t_card: ''
    }
    let dalay = false;
    let disable = false;
    let shows_who_knocks = true;

    $(function (){
        ///Fontend Settings ->>
        //Toastr Options
        toastr.options.preventDuplicates = true;
     
        //Side Bar Display
        $("#menu-toggle").click(function(e) {
            e.preventDefault();
            $("#wrapper").toggleClass("toggled");
        });

        //Modal
        $('#myModal').on('shown.bs.modal', function () {
            $('#myInput').trigger('focus')
        });       

        //Init Gameboard
        reset();

        //WebSockets
        const socket = io();

        //Pick a Card
        $.fn.selectPlayerCard = function (e)
        {
          if(!dalay)
          {
            dalay = true;
            setTimeout(function(){dalay = false;}, 200);
            if(pick.p_card === $(e).attr('id'))
            {
              $(e).css({"padding-bottom": "0"});
              pick.p_card = '';
              return
            }
            else
            {
              if(pick.p_card !== '')
              {
                const new_card = $(e).attr('id');
                const prev_card = pick.p_card;
                if(new_card !== pick.p_card)
                {
                  socket.emit('swap_card', {new_card: new_card, prev_card: prev_card})
                }
                $(e).css({"padding-bottom": "0"});
                pick.p_card = ''; 
                return     
              }
            }
            $('#c_player').children().css({"padding-bottom": "0"});
            $(e).css({"padding-bottom": "2em"});
            pick.p_card = $(e).attr('id');   
            //Send
            if(pick.p_card !== '' && pick.t_card !== '')
            {
              socket.emit('pick', pick);
              pick.p_card = '';
              pick.t_card = '';
              disable = true;
              $('#tocar').hide();
            }
          }
        }

        $.fn.selectTableCard = function (e)
        {
          if(disable){return}
          if(!dalay)
          {
            dalay = true;
            setTimeout(function(){dalay = false;}, 200);
            if(pick.t_card === $(e).attr('id'))
            {
              $(e).css({"padding-top": "0"});
              pick.t_card = '';
              return
            }
            $('#c_table').children().css({"padding-top": "0"});
            $(e).css({"padding-top": "2em"});
            pick.t_card = $(e).attr('id');
            //Send
            if(pick.p_card !== '' && pick.t_card !== '')
            {
              socket.emit('pick', pick);
              pick.p_card = '';
              pick.t_card = '';
              disable = true;
              $('#tocar').hide();
            }
          }        
        }

        //Get Status
        socket.on('connected', (data) => {
            toastr.success(data);
        });
        socket.on('disconnected', (data) => {
            toastr.warning(data);
        });
        //Get Message
        socket.on('message', (data) => {
            toastr.info(data);
        });
        //Get Data
        socket.on('players', (data) => {
            $('#players').empty();
            for(let i=0; i < data.length; i++)
            {
                if(socket.id == data[i].id)
                {
                  if(data[i].nombre)
                  {$('#p_name').text(data[i].nombre + '\n' + data[i].id);}else
                  {$('#p_name').text(data[i].id);}               
                }
                if(data[i].nombre)
                {$('#players').append('<li id="' + data[i].id + '" class="list-group-item">' + data[i].nombre + '<br>' + data[i].id + '<div id="_P' + data[i].id + '"></div><div id="_C' + data[i].id + '"></div></li>');}else
                {$('#players').append('<li id="' + data[i].id + '" class="list-group-item">' + data[i].id + '<div id="_P' + data[i].id + '"></div><div id="_C' + data[i].id + '"></div></li>');}
            }           
        });
        socket.on('init', () => {
            //Disable Init button
            $('#init').hide();              
        });
        socket.on('set_player_cards', (data) => {
            $('#c_player').empty();
            for(let i=0; i < data.hand.length; i++)
            {
                $('#c_player').append('<div class="col-sm" id="' + (data.hand[i].value + data.hand[i].type) + '" style="padding-right: 0.2em; padding-bottom: 0;" onClick="$(this).selectPlayerCard(this);" onTouch="$(this).selectPlayerCard(this);"><img src="/pics/cards/' + data.hand[i].img + '" style="width: 100%; height: 100%;"></div>');
            }
        });
        socket.on('set_table_cards', (data) => {
            $('#c_table').empty();
            for(let i=0; i < data.c_table.length; i++)
            {
                $('#c_table').append('<div class="col-sm" id="' + (data.c_table[i].value + data.c_table[i].type) + '" style="padding-right: 0.2em; padding-top: 0;" onClick="$(this).selectTableCard(this);" onTouch="$(this).selectTableCard(this);"><img src="/pics/cards/' + data.c_table[i].img + '" style="width: 100%; height: 100%;"></div>');
            }  
        });
        socket.on('room_data', (data) => {
            if(data)
            {
              //Check Table Cards
              if(data.c_ronda)
              {
                $('#c_table').empty();
                for(let i=0; i < data.c_table.length; i++)
                {
                    $('#c_table').append('<div class="col-sm" id="' + (data.c_table[i].value + data.c_table[i].type) + '" style="padding-right: 0.2em; padding-top: 0;" onClick="$(this).selectTableCard(this);" onTouch="$(this).selectTableCard(this);"><img src="/pics/cards/' + data.c_table[i].img + '" style="width: 100%; height: 100%;"></div>');
                }
              }
              //Set Turn Display
              $('#players').children().css('background', '#F0EFEF');
              $('#'+ data.p_turn).css('background','#C1C1FB');
              if(socket.id == data.p_turn)
              {
                toastr.info($('#p_name').text(), 'Es tu Turno:');
                disable = false;
                //Enable End_Turn button
                $('#end_turn').show();
                if(data.c_ronda){
                  $('#tocar').show();
                  $('#take_all').hide();
                  if(data.p_cantake === socket.id)
                  {
                    $('#take_all').show();
                  }                
                }
                else{
                  $('#tocar').hide();
                  $('#take_all').show();   
                }
              }
              else
              {
                $('#end_turn').hide();
                $('#tocar').hide();
                $('#take_all').hide();
              }
              //Get Game State
              if(data.p_knock)
              {
                $('#tocar').hide();
                if(shows_who_knocks)
                {
                  shows_who_knocks = false;
                  $('#'+ data.p_knock).css('background','#F67F7F');
                  socket.emit('get_knock_msg', data.p_knock);
                }               
              }
              //Viudad
              $('#_viudas').text(data.widows);
              //Display Wildcard
              if(data.j_jugados > 0)
              {
                $('#_comodin').show();
                $('#_comodin').attr('src', '/pics/cards/' + data.comodin);
              }
            }
        });
        socket.on('player_data', data => {
            if(data)
            {             
              $('#p_fichas').text(data.chips);
              $('#p_puntos').text(data.points);

              if(data.chips === 0)
              {
                const viudas = parseInt($('#_viudas').text());
                if(viudas > 0)
                {
                  $('#modal2').modal('show');
                }
                else
                {
                  socket.emit('lose');                 
                }
              }
            }
        });
        socket.on('end_game', data => {
            if(data)
            {             
              $('#_end_game_list').empty();
              for(let i=0; i < data.length; i++)
              {
                if(socket.id == data[i].id)
                {
                  if(data[i].nombre)
                  {
                    $('#_end_game_list').append('<div style="color: red;"><b>Jugador:</b><p>' + data[i].nombre + ' - ' + data[i].id + '</p><b>Puntos:</b><p>' + data[i].score + '</p><b>Tipo de Juego:</b><p>' + data[i].g_type + '</p></div>');
                  }
                  else
                  {
                    $('#_end_game_list').append('<div style="color: red;"><b>Jugador:</b><p>' + data[i].id + '</p><b>Puntos:</b><p>' + data[i].score + '</p><b>Tipo de Juego:</b><p>' + data[i].g_type + '</p></div>');
                  }
                }
                else
                {
                  if(data[i].nombre)
                  {
                    $('#_end_game_list').append('<div><b>Jugador:</b><p>' + data[i].nombre + ' - ' + data[i].id + '</p><b>Puntos:</b><p>' + data[i].score + '</p><b>Tipo de Juego:</b><p>' + data[i].g_type + '</p></div>');
                  }
                  else
                  {
                    $('#_end_game_list').append('<div><b>Jugador:</b><p>' + data[i].id + '</p><b>Puntos:</b><p>' + data[i].score + '</p><b>Tipo de Juego:</b><p>' + data[i].g_type + '</p></div>');
                  }
                }                
                const t = $('<div class="container" style="display: inline-flex; margin-bottom: 1em;"></div>');
                for(let v=0; v < data[i].hand.length; v++)
                {
                  $(t).append('<div class="col-sm"><img src="/pics/cards/' + data[i].hand[v].img + '" style="width: 100%; height: 100%;"></div>');
                }
                $('#_end_game_list').append(t);
              }
              $('#modal3').modal('show');
            }
        });
        socket.on('send_next_game', () => {
            reset();
        });
        socket.on('_extra_card', data => {
          if(data)
          {
            if(socket.id == data.id)
            {
              if(data.juego.extra != null)
              {
                toastr.info('Has partido la baraja y te has ganado el comod√≠n!');
                $('#_C'+ data.id).empty();
                $('#_C'+ data.id).append('<img src="/pics/cards/' + data.juego.extra.img + '" style="width: 32px; height: 50px;">');
              }
              else
              {
                toastr.info('Has partido la baraja pero no has sacado comod√≠n.');
              }              
            }
            else
            {
              if(data.juego.extra != null)
              {
                if(data.nombre)
                {
                  toastr.info(data.nombre + ' - ' + data.id + ' a partido la baraja y se ha ganado el comod√≠n!');
                }
                else
                {
                  toastr.info(data.id + ' a partido la baraja y se ha ganado el comod√≠n!');
                }
                $('#_C'+ data.id).empty();
                $('#_C'+ data.id).append('<img src="/pics/cards/' + data.juego.extra.img + '" style="width: 32px; height: 50px;">');
              }
              else
              {
                if(data.nombre)
                {
                  toastr.info(data.nombre + ' - ' + data.id + ' a partido la baraja pero no ha sacado comod√≠n!');
                }
                else
                {
                  toastr.info(data.id + ' a partido la baraja pero no ha sacado comod√≠n!');
                }
              }
            }
            //------->
            $('#_baraja_partida_img').attr('src', '/pics/cards/' + data.extra_img);
          }           
        });
        socket.on('players_data', data => {
          if(data)
          {
            for(let i=0; i < data.length; i++)
            {
              $('#_P'+ data[i].id).empty();
              $('#_P'+ data[i].id).append('<p><b>-Puntos:</b> ' + data[i].juego.points + ' <b>-Fichas:</b> ' + data[i].juego.chips + '</p>');
              $('#_viudas').text(data[i].viudas);
              if(data[i].juego.extra == null)
              {
                $('#_C'+ data[i].id).empty();
              }
            }
          }        
        });
        socket.on('_send_split_deck_request', data => {
          if(data)
          {
            if(socket.id == data.id)
            {
              $('#modal4').modal('show');
            }
            else
            {
              if(data.nombre)
              {
                toastr.info(data.nombre + ' - ' + data.id + ' partir√° la baraja.', 'En b√∫squeda del comod√≠n:');
              }
              else
              {
                toastr.info(data.id + ' partir√° la baraja.', 'En b√∫squeda del comod√≠n:');
              }
            }
          }
        }); 
        socket.on('someone_bought_a_window', data => {
          if(data)
          {
            if(data.nombre)
            {
              toastr.info(data.nombre + ' - ' + data.id + ' ha comprado una viuda.');
            }
            else
            {
              toastr.info(data.id + ' ha comprado una viuda.');
            }
          }
        });
        socket.on('send_loser_msg', data => {
          if(data)
          {
            if(socket.id == data.id)
            {
              alert('Te has quedado sin fichas! Estas fuera del juego.');
              window.location.replace('/')
            }
            else
            {
              if(data.nombre)
              {
                toastr.info(data.nombre + ' - ' + data.id + ' se ha quedado sin fichas.', 'Expulsado:');
              }
              else
              {
                toastr.info(data.id + ' se ha quedado sin fichas.', 'Expulsado:');
              }
            }            
          }
        });  
        socket.on('send_knock_msg', data => {
          if(data)
          {
            if(socket.id !== data.id)
            {
              if(data.nombre)
              {
                toastr.error(data.nombre + ' - ' + data.id + ' ha tocado. Te queda solo un turno.', 'Han Tocado!');
              }
              else
              {
                toastr.error(data.id + ' ha tocado. Te queda solo un turno.', 'Han Tocado!');
              }
            }                      
          }
        });     
        //Send Data
        $('#init').on('click', () => {
            socket.emit('init');
        });
        $('#end_turn').on('click', () => {
            socket.emit('end_turn');
        });
        $('#tocar').on('click', () => {
            socket.emit('tocar');
        });
        $('#take_all').on('click', () => {
            socket.emit('take_all');
        });
        $('#nombre').on('click', () => {
            $('#modal').modal('hide');
            socket.emit('nombre', $('#t_nombre').val().toUpperCase());
        });
        $('#comprar_viuda').on('click', () => {
            const points = parseInt($('#p_puntos').text());
            if(points >= {{precioViuda}}){
              $('#modal2').modal('hide');
              socket.emit('viuda_b');
            }else{
              alert('No tienes puntos suficientes.');
            }
        });
        $('#_next_game').on('click', () => {
            $('#modal3').modal('hide');
            socket.emit('request_next_game');
        });
        $('#_partir_baraja').on('click', () => {
            socket.emit('request_split_deck');
        });
        $('#_sin_fichas').on('click', () => {
            socket.emit('lose');
        });
    });
</script>
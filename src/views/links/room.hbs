<div class="container p-4">
    <div class="d-flex" id="wrapper">
    <!-- Sidebar -->
    <div id="sidebar-wrapper">
      <div class="sidebar-heading"><h4>Jugadores</h4></div>
      <ul class="list-group" id="players"></ul>
    </div>
    <!-- /#sidebar-wrapper -->
    <!-- Page Content -->
    <div>
      <nav class="navbar navbar-expand-lg navbar-light">
        <button class="btn btn-primary" id="menu-toggle">Toggle</button>
        <div style="margin-left: 1em; width: 100%; border-bottom: 1px solid black;">
          <h6 id="p_name" style="float: right;"></h6>
        </div>
      </nav>
      <div class="container-fluid">
        <div id="board" style="text-align:center;">
          <div id="c_table" style="display: inline-flex;"></div>
          <div id="c_player" style="display: inline-flex;"></div>
        </div>
        <div class="row" style="margin: 1em 0 2em 0;">
          <div class="col-md-6">
            <button style="margin: 0.5em;" class="btn btn-info btn-block" id="init">Iniciar Partida</button>
            <button style="margin: 0.5em;" class="btn btn-info btn-block" id="end_turn">Terminar Turno</button>
            <button style="margin: 0.5em;" class="btn btn-info btn-block" id="take_all">Tomar Todas</button>
            <button style="margin: 0.5em;" class="btn btn-danger btn-block" id="tocar">Tocar</button>
            <hr>                              
            <button style="margin: 0.5em;" class="btn btn-secondary btn-block" data-toggle="modal" data-target="#modal">Cambiar Nombre</button>
            <a class="btn btn-dark btn-block" style="margin: 0.5em;" href="/">Salir</a>
          </div>
          <div class="col-md-6">
            <ul id="player_data" class="list-group">
              <li class="list-group-item">Fichas: <p id="p_fichas"></p></li>
              <li class="list-group-item">Puntos: <p id="p_puntos"></p></li>
              <li class="list-group-item">Viudas Restantes: <p id="_viudas"></p></li>
            </ul>
          </div>                      
        </div>
      </div>
    </div>
    <!-- #content -->
  </div>
</div>
{{! Cambiar Nombre }}
<div class="modal" id="modal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header" style="text-align: center;">
        <h5 class="modal-title">Nombre de Jugador</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <input type="text" id="t_nombre" style="text-transform:uppercase" class="form-control">
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="nombre">Guardar</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
      </div>
    </div>
  </div>
</div>
{{! Comprar Viuda }}
<div class="modal" id="modal2" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header" style="text-align: center;">
        <h5 class="modal-title">Sin Fichas!</h5>
      </div>
      <div class="modal-body" style="text-align: center;">
        <h4>Te has quedado sin fichas</h4>
        <p>Para seguir en el juego necesitas comprar un ficha Viuda por:</p>
        <h2>500</h2>
        <p>puntos</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" id="comprar_viuda">Comprar</button>
        <a class="btn btn-dark" href="/">Salir</a>
      </div>
    </div>
  </div>
</div>
<script>
    function reset()
    {
      $('#c_table').empty();
      $('#c_player').empty();
      for(let i=0; i < 5; i++)
      {
          $('#c_table').append('<div class="col-sm" style="padding-right: 0.2em; padding-top: 0;"><img src="/pics/cards/card_back.svg" style="width: 100%; height: 100%;"></div>');
          $('#c_player').append('<div class="col-sm" style="padding-right: 0.2em; padding-bottom: 0;"><img src="/pics/cards/card_back.svg" style="width: 100%; height: 100%;"></div>');
      }
      //-->
      $('#init').show();
      $('#end_turn').hide();
      $('#take_all').hide();
      $('#tocar').hide();      
    }

    let pick = {
      p_card: '',
      t_card: ''
    }
    let disable = false;

    $(function (){
        ///Fontend Settings ->>
        //Toastr Options
        toastr.options.preventDuplicates = true;
     
        //Side Bar Display
        $("#menu-toggle").click(function(e) {
            e.preventDefault();
            $("#wrapper").toggleClass("toggled");
        });

        //Modal
        $('#myModal').on('shown.bs.modal', function () {
            $('#myInput').trigger('focus')
        });       

        //Init Gameboard
        reset();

        //WebSockets
        const socket = io();

        //Pick a Card
        $.fn.selectPlayerCard = function (e)
        {
          if(disable){return}
          if(pick.p_card === $(e).attr('id'))
          {
            $(e).css({"padding-bottom": "0"});
            pick.p_card = '';
            return
          }
          $('#c_player').children().css({"padding-bottom": "0"});
          $(e).css({"padding-bottom": "2em"});
          pick.p_card = $(e).attr('id');   
          //Send
          if(pick.p_card !== '' && pick.t_card !== '')
          {
            socket.emit('pick', pick);
            pick.p_card = '';
            pick.t_card = '';
            disable = true;
          }
        }

        $.fn.selectTableCard = function (e)
        {
          if(disable){return}
          if(pick.t_card === $(e).attr('id'))
          {
            $(e).css({"padding-top": "0"});
            pick.t_card = '';
            return
          }
          $('#c_table').children().css({"padding-top": "0"});
          $(e).css({"padding-top": "2em"});
          pick.t_card = $(e).attr('id');
          //Send
          if(pick.p_card !== '' && pick.t_card !== '')
          {
            socket.emit('pick', pick);
            pick.p_card = '';
            pick.t_card = '';
            disable = true;
          }
        }

        $.fn.dragStart = function (e)
        {
          e.dataTransfer.setData("Text", e.target.parentElement.id);
        }

        $.fn.allowDrop = function (e)
        {
          e.preventDefault();
        }

        $.fn.drop = function (e)
        {
          e.preventDefault();
          const n = e.dataTransfer.getData("Text");
          if(!n){return}
          const p = e.target.parentElement.id;
          if(!p){return}
          if(n.length > 3 || p.length > 3){return}
          socket.emit('swap_card', {new_card: n, prev_card: p})      
        }

        //Get Status
        socket.on('connected', (data) => {
            toastr.success(data);
        });
        socket.on('disconnected', (data) => {
            toastr.warning(data);
        });
        //Get Message
        socket.on('message', (data) => {
            toastr.info(data);
        });
        //Get Data
        socket.on('players', (data) => {
            $('#players').empty();
            for(let i=0; i < data.length; i++)
            {
                if(socket.id == data[i].id)
                {
                  if(data[i].nombre)
                  {$('#p_name').text(data[i].nombre + ' - ' + data[i].id);}else
                  {$('#p_name').text(data[i].id);}               
                }
                if(data[i].nombre)
                {$('#players').append('<li id="' + data[i].id + '" class="list-group-item">' + data[i].nombre + '<br>' + data[i].id + '</li>');}else
                {$('#players').append('<li id="' + data[i].id + '" class="list-group-item">' + data[i].id + '</li>');}
            }           
        });
        socket.on('init', () => {
            //Disable Init button
            $('#init').hide();              
        });
        socket.on('set_player_cards', (data) => {
            $('#c_player').empty();
            for(let i=0; i < data.hand.length; i++)
            {
                $('#c_player').append('<div class="col-sm" id="' + (data.hand[i].value + data.hand[i].type) + '" style="padding-right: 0.2em; padding-bottom: 0;" onClick="$(this).selectPlayerCard(this);"><img src="/pics/cards/' + data.hand[i].img + '" style="width: 100%; height: 100%;" ondragstart="$(this).dragStart(event);" ondrop="$(this).drop(event);" ondragover="$(this).allowDrop(event);" draggable="true"></div>');
            }
        });
        socket.on('set_table_cards', (data) => {
            $('#c_table').empty();
            for(let i=0; i < data.c_table.length; i++)
            {
                $('#c_table').append('<div class="col-sm" id="' + (data.c_table[i].value + data.c_table[i].type) + '" style="padding-right: 0.2em; padding-top: 0;" onClick="$(this).selectTableCard(this);"><img src="/pics/cards/' + data.c_table[i].img + '" style="width: 100%; height: 100%;"></div>');
            }  
        });
        socket.on('room_data', (data) => {
            if(data)
            {
              //Check Table Cards
              if(data.c_ronda)
              {
                $('#c_table').empty();
                for(let i=0; i < data.c_table.length; i++)
                {
                    $('#c_table').append('<div class="col-sm" id="' + (data.c_table[i].value + data.c_table[i].type) + '" style="padding-right: 0.2em; padding-top: 0;" onClick="$(this).selectTableCard(this);"><img src="/pics/cards/' + data.c_table[i].img + '" style="width: 100%; height: 100%;"></div>');
                }
              }

              //Set Turn Display
              $('#players').children().css('background', '#ffffff');
              $('#'+ data.p_turn).css('background','#C1C1FB');
              if(socket.id == data.p_turn)
              {
                toastr.info($('#p_name').text(), 'Es tu Turno:');
                disable = false;
                //Enable End_Turn button
                $('#end_turn').show();
                if(data.c_ronda){
                  $('#tocar').show();
                  $('#take_all').hide();
                  if(data.p_cantake === socket.id)
                  {
                    $('#take_all').show();
                  }                
                }
                else{
                  $('#tocar').hide();
                  $('#take_all').show();   
                }
              }
              else{
                $('#end_turn').hide();
                $('#tocar').hide();
                $('#take_all').hide();
              }

              //Get Game State
              if(data.p_knock)
              {
                $('#tocar').hide();
                $('#'+ data.p_knock).css('background','#FF0000');
                if(socket.id !== data.p_knock)
                {
                  toastr.error($('#p_name').text(), 'Ah tocado! Te queda solo un turno.');
                }
              }

              //Viudad
              $('#_viudas').text(data.widows);
            }
        });
        socket.on('player_data', data => {
            if(data)
            {             
              $('#p_fichas').text(data.chips);
              $('#p_puntos').text(data.points);

              if(data.chips === 0)
              {
                const viudas = $('#_viudas');
                if(viudas > 0){
                  $('#modal2').modal('show');
                }
                else{
                  alert('Has perdido!');
                  window.location.replace('/')
                }
              }
            }
        });
        //Send Data
        $('#init').on('click', () => {
            socket.emit('init');
        });
        $('#end_turn').on('click', () => {
            socket.emit('end_turn');
        });
        $('#tocar').on('click', () => {
            socket.emit('tocar');
        });
        $('#take_all').on('click', () => {
            socket.emit('take_all');
        });
        $('#nombre').on('click', () => {
            $('#modal').modal('hide');
            socket.emit('nombre', $('#t_nombre').val().toUpperCase());
        });
        $('#comprar_viuda').on('click', () => {
            const points = $('#p_puntos');
            if(points >= 500){
              socket.emit('viuda_b');
            }else{
              alert('No tienes puntos suficientes.');
            }
        });
    });
</script>